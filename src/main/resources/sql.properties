                 ### Period ###
GET_LAST_PERIOD=\
  SELECT p.id, p.status, p.date \
  FROM period AS p \
  ORDER BY p.id DESC \
  LIMIT 1;
INSERT_PERIOD=\
  INSERT INTO period (status, date) \
  VALUES (?, NOW());
                ### Person ###
CREATE_PERSON=\
  INSERT INTO person (last_name, name, patronymic) \
  VALUES (?, ?, ?);
UPDATE_PERSON=\
  UPDATE person SET last_name = ?, name = ?, patronymic = ? \
  WHERE id = ?;
GET_PERSON_BY_ID=\
  SELECT p.id, p.last_name, p.name, p.patronymic \
  FROM person AS p \
  WHERE p.id = ? \
  ORDER BY p.id DESC \
  LIMIT 1;
GET_ALL_PERSON=\
  SELECT p.id, p.last_name, p.name, p.patronymic \
  FROM person AS p;
                  ### User ###
REPLACE_USER=\
  REPLACE INTO user (person_id, username, password, role) \
  VALUES (?, ?, ?, ?);
GET_USER_BY_USERNAME=\
  SELECT u.person_id, u.username, u.password, u.role \
  FROM user AS u \
  WHERE u.username = ? \
  ORDER BY u.person_id DESC \
  LIMIT 1;
GET_USER_BY_ID=\
  SELECT u.person_id, u.username, u.password, u.role \
  FROM user AS u \
  WHERE u.person_id = ? \
  ORDER BY u.person_id DESC \
  LIMIT 1;


GET_ALL_USER=\
  SELECT u.person_id, p.last_name, p.name, p.patronymic, u.username, u.password, u.role \
  FROM user AS u \
  INNER JOIN person AS p ON u.person_id = p.id;

                  ### Student ###
REPLACE_STUDENT=\
  REPLACE INTO student (user_person_id, form, contract) \
  VALUES (?, ?, ?);
GET_STUDENT_BY_ID=\
  SELECT s.user_person_id, s.form, s.contract \
  FROM student AS s \
  WHERE s.user_person_id = ? \
  ORDER BY s.user_person_id DESC \
  LIMIT 1;
GET_ALL_STUDENT=\
  SELECT s.user_person_id, s.form, s.contract \
  FROM student AS s;
DELETE_STUDENT =\
  DELETE FROM student WHERE user_person_id = ?;
                  ### Teacher ###
REPLACE_TEACHER =\
  REPLACE INTO teacher (user_person_id, position) \
  VALUES (?, ?);
GET_TEACHER_BY_ID =\
  SELECT t.user_person_id, t.position \
  FROM teacher AS t \
  WHERE t.user_person_id = ? \
  ORDER BY t.user_person_id DESC \
  LIMIT 1;
GET_ALL_TEACHER =\
  SELECT t.user_person_id, t.position \
  FROM teacher AS t;
DELETE_TEACHER =\
  DELETE FROM teacher WHERE user_person_id = ?;
                  ### Subject ###
CREATE_SUBJECT=\
  INSERT INTO subject (teacher_user_person_id, title) \
  VALUES (?, ?);
UPDATE_SUBJECT=\
  UPDATE subject SET teacher_user_person_id = ?, title = ? \
  WHERE id = ?;
GET_ALL_SUBJECT=\
  SELECT s.id, s.teacher_user_person_id, s.title \
  FROM subject AS s;
GET_SUBJECT_BY_ID=\
  SELECT s.id, s.teacher_user_person_id, s.title \
  FROM subject AS s \
  WHERE s.id = ? \
  ORDER BY s.id DESC \
  LIMIT 1;
GET_SUBJECT_BY_TEACHER=\
  SELECT s.id, s.teacher_user_person_id, s.title \
  FROM subject AS s \
  WHERE s.teacher_user_person_id = ? \
  ORDER BY s.id DESC \
  LIMIT 1;
GET_SUBJECT_BY_STUDENT=\
  SELECT s.id, s.teacher_user_person_id, s.title \
  FROM subject AS s \
  INNER JOIN evaluation AS e \
  ON s.id = e.subject_id \
  WHERE e.student_user_person_id = ? \
  ORDER BY s.id DESC \
  LIMIT 1;
DELETE_SUBJECT=\
  DELETE FROM subject \
  WHERE id = ?;
                  ### Evaluation ###
CREATE_EVALUATION=\
  INSERT INTO evaluation (subject_id, student_user_person_id, status, rating, feedback) \
  VALUES (?, ?, ? ,?, ?);
UPDATE_EVALUATION=\
  UPDATE evaluation SET subject_id = ?, student_user_person_id = ?, \
  status = ?, rating = ?, feedback = ? \
  WHERE id = ?;
GET_EVALUATION_BY_SUBJECT_AND_STUDENT=\
  SELECT e.id, e.subject_id, e.student_user_person_id, e.status, e.rating, e.feedback \
  FROM evaluation AS e \
  WHERE e.subject_id = ? AND e.student_user_person_id = ? \
  ORDER BY e.id DESC \
  LIMIT 1;
GET_EVALUATION_BY_ID=\
  SELECT e.id, e.subject_id, e.student_user_person_id, e.status, e.rating, e.feedback \
  FROM evaluation AS e \
  WHERE e.id = ? \
  ORDER BY e.id DESC \
  LIMIT 1;
GET_EVALUATION_BY_STUDENT=\
  SELECT e.id, e.subject_id, e.student_user_person_id, e.status, e.rating, e.feedback \
  FROM evaluation AS e \
  WHERE e.student_user_person_id = ? AND e.status = 'CONFIRMED';
GET_EVALUATION_BY_SUBJECT=\
  SELECT e.id, e.subject_id, e.student_user_person_id, e.status, e.rating, e.feedback \
  FROM evaluation AS e \
  WHERE e.subject_id = ? AND e.status != 'DELETED';